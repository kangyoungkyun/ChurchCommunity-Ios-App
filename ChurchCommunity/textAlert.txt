let alertController = UIAlertController(
title: nil,
message: "알림.",
preferredStyle: .alert)


//let loginAction = UIAlertAction(title: "수정", style: .default) { (_) in
//let loginTextField        = alertController.textFields![0] as! UITextField
//let passwordTextField     = alertController.textFields![1] as! UITextField

//login(loginTextField.text, passwordTextField.text)
//}

//loginAction.isEnabled = false


/*
alertController.addTextField { (textField) in
textField.placeholder = "Login"
NotificationCenter.default.addObserver(forName: NSNotification.Name.UITextFieldTextDidChange, object: textField, queue: OperationQueue.main) { (notification) in
print("\(textField.text)")
loginAction.isEnabled = textField.text != ""
}
}

alertController.addTextField { (textField) in
textField.placeholder = "Password"
textField.isSecureTextEntry = true
}
*/


let forgotPasswordAction = UIAlertAction(title: "삭제", style: .destructive, handler: nil)
let cancelAction = UIAlertAction(title: "취소", style: .cancel, handler: nil)

alertController.addAction(loginAction)
alertController.addAction(forgotPasswordAction)
alertController.addAction(cancelAction)

self.present(
alertController,
animated: true,
completion: nil)











func promptForAnswer() {
let ac = UIAlertController(title: "Enter answer", message: nil, preferredStyle: .alert)


ac.addTextField { textField in
let heightConstraint = NSLayoutConstraint(item: textField, attribute: .height, relatedBy: .equal, toItem: nil, attribute: .notAnAttribute, multiplier: 1, constant: 100)

textField.addConstraint(heightConstraint)


}

let submitAction = UIAlertAction(title: "Submit", style: .default) { [unowned ac] _ in
let answer = ac.textFields![0]
print(answer)
}

ac.addAction(submitAction)

present(ac, animated: true)
}











extension CGRect {
init(_ x:CGFloat, _ y:CGFloat, _ w:CGFloat, _ h:CGFloat) {
self.init(x:x, y:y, width:w, height:h)
}

func popUpController()
{

let alertController = UIAlertController(title: "\n\n\n\n\n\n", message: nil, preferredStyle: UIAlertControllerStyle.alert)

let margin:CGFloat = 8.0
let rect = CGRect(margin, margin, alertController.view.bounds.size.width - margin * 15.0, 100.0)
let customView = UITextView(frame: rect)

customView.backgroundColor = UIColor.clear
customView.font = UIFont(name: "Helvetica", size: 15)

alertController.view.addSubview(customView)

let somethingAction = UIAlertAction(title: "수정", style: UIAlertActionStyle.default, handler: {(alert: UIAlertAction!) in print("something")

print(customView.text)

})

let cancelAction = UIAlertAction(title: "취소", style: UIAlertActionStyle.cancel, handler: {(alert: UIAlertAction!) in print("cancel")})

alertController.addAction(somethingAction)
alertController.addAction(cancelAction)

self.present(alertController, animated: true, completion:{})


}



//테이블 뷰 싱글텝 더블텝
https://stackoverflow.com/questions/43153530/single-and-double-taps-on-uitableviewcell-in-swift-3/43299342



https://www.raywenderlich.com/category/ios











//테이블 뷰 셀안에서 이름을 클릭했을때 델리게이트 지정해주는 법
// 1.
protocol PlayVideoCellProtocol {
func playVideoButtonDidSelect()
}

class TableViewCell {
// ...

// 2.
var delegate: PlayVideoCellProtocol!

// 3.
@IBAction func playVideo(sender: AnyObject) {
self.delegate.playVideoButtonDidSelect()
}

// ...
}


class TableViewController: SuperClass, PlayVideoCellProtocol {

// ...

// 4.
func playVideoButtonDidSelect() {
let viewController = ViewController() // Or however you want to create it.
self.presentViewController(viewController, animated: true, completion: nil)
}

func tableView(tableView: UITableView, cellForRowAtIndexPath: NSIndexPath) -> UITableViewCell {
//... Your cell configuration

// 5.
cell.delegate = self

//...
}
//...
}






//완료되면 textfield 커서 사라지고, 키보드 내리기
self.birthTextField.selectedTextRange = nil
self.self.nameTextField.selectedTextRange = nil
self.self.mesageTextField.selectedTextRange = nil

self.birthTextField.resignFirstResponder()
self.self.nameTextField.resignFirstResponder()
self.self.mesageTextField.resignFirstResponder()






//alercontroller안에 피커뷰 넣기


let message = "\n\n\n\n\n\n"
let alert = UIAlertController(title: "Please Select City", message: message, preferredStyle: UIAlertControllerStyle.actionSheet)
alert.isModalInPopover = true

let pickerFrame = UIPickerView(frame: CGRect(x: 5, y: 20, width: SCREEN_WIDTH - 20, height: 140)) // CGRectMake(left, top, width, height) - left and top are like margins
pickerFrame.tag = 555
//set the pickers datasource and delegate
pickerFrame.delegate = self

//Add the picker to the alert controller
alert.view.addSubview(pickerFrame)
let okAction = UIAlertAction(title: "OK", style: .default, handler: {
(alert: UIAlertAction!) -> Void in
//Perform Action
})
alert.addAction(okAction)
let cancelAction = UIAlertAction(title: "Cancel", style: .destructive, handler: nil)
alert.addAction(cancelAction)
self.parent!.present(alert, animated: true, completion: { _ in })







//----------------- 멀티 피커뷰

1.
class birthDate {
var month : [String]
var days: [String]
init(month: [String], days:[String]){
self.month = month
self.days = days
}
}

2.
UIPickerViewDelegate,UIPickerViewDataSource 상속

3.데이터 담을 배열

var birthData = [birthDate]()


4. 반드시 구현해줘야하는 함수


//피커뷰 개수
func numberOfComponents(in pickerView: UIPickerView) -> Int {
return 2
}

//피커뷰의 각 행개수
func pickerView(_ pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int {
if component == 0 {
return birthData[0].month.count
}else{
return birthData[0].days.count
}
}
//피커뷰의 데이터 넣기
func pickerView(_ pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String? {
if component == 0 {
return birthData[0].month[row]
}else{
return birthData[0].days[row]
}
}
//해당 피커뷰를 선택했을 때
func pickerView(_ pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int) {
pickerView.reloadComponent(1)

let selectedMonth = pickerView.selectedRow(inComponent: 0)
let selectedDay = pickerView.selectedRow(inComponent: 1)
let months = birthData[0].month[selectedMonth]
let day = birthData[0].days[selectedDay]

//텍스트에 뿌려주기
birthTextField.text = "\(months) \(day)"
}




5.초기화때 데이터 만들어 주기
//생일 더미 데이터 넣어주기
birthData.append(birthDate(month: ["1월","2월","3월","4월","5월","6월","7월","8월","9월","10월","11월","12월"],
days: ["1일","2일","3일","4일","5일","6일","7일","8일","9일","10일","11일","12일","13일","14일","15일","16일","17일","18일",
"19일","20일","21일","22일","23일","24일","25일","26일","27일","28일","29일","30일","31일"]))


6. 피커뷰 객체 생성 및 alertController에 넣어주기

//생일란을 선택했을 때 발생하는 이벤트
@objc func handleSelectBirth (){
// print("생일 이벤트~!")
let message = "\n\n\n\n\n\n"
let alert = UIAlertController(title: "태어난 달과 일을 선택해주세요.", message: message, preferredStyle: UIAlertControllerStyle.actionSheet)
alert.isModalInPopover = true


let pickerFrame = UIPickerView() // CGRectMake(left, top, width, height) - left and top are like margins

//set the pickers datasource and delegate
pickerFrame.delegate = self
pickerFrame.dataSource = self


//Add the picker to the alert controller
alert.view.addSubview(pickerFrame)

let okAction = UIAlertAction(title: "확인", style: .default, handler: nil)
alert.addAction(okAction)
self.parent!.present(alert, animated: true) {
print("성공")

}

}






//파이어베이스에 사진 여러장 업로드
https://stackoverflow.com/questions/37769701/uploading-multiple-images-simultaneously-with-google-firebase





//테이블 뷰 인디케이터

var activityIndicatorView: UIActivityIndicatorView!


activityIndicatorView = UIActivityIndicatorView(activityIndicatorStyle: .gray)
activityIndicatorView.translatesAutoresizingMaskIntoConstraints = false
self.view.addSubview(activityIndicatorView)
activityIndicatorView.centerXAnchor.constraint(equalTo: view.centerXAnchor).isActive = true
activityIndicatorView.centerYAnchor.constraint(equalTo: view.centerYAnchor,constant: -60).isActive = true
activityIndicatorView.bringSubview(toFront: self.view)
activityIndicatorView.startAnimating()
tableView.separatorStyle = .none

print("start 인디케이터")

DispatchQueue.main.async {
print("start DispatchQueue")
OperationQueue.main.addOperation() {
print("start OperationQueue")
self.tableView.separatorStyle = .singleLine
Thread.sleep(forTimeInterval: 1.5)
print("start forTimeInterval")
self.activityIndicatorView.stopAnimating()
self.tableView.reloadData()
}
}




//특정 문자 제거하기
