let alertController = UIAlertController(
title: nil,
message: "알림.",
preferredStyle: .alert)


//let loginAction = UIAlertAction(title: "수정", style: .default) { (_) in
//let loginTextField        = alertController.textFields![0] as! UITextField
//let passwordTextField     = alertController.textFields![1] as! UITextField

//login(loginTextField.text, passwordTextField.text)
//}

//loginAction.isEnabled = false


/*
alertController.addTextField { (textField) in
textField.placeholder = "Login"
NotificationCenter.default.addObserver(forName: NSNotification.Name.UITextFieldTextDidChange, object: textField, queue: OperationQueue.main) { (notification) in
print("\(textField.text)")
loginAction.isEnabled = textField.text != ""
}
}

alertController.addTextField { (textField) in
textField.placeholder = "Password"
textField.isSecureTextEntry = true
}
*/


let forgotPasswordAction = UIAlertAction(title: "삭제", style: .destructive, handler: nil)
let cancelAction = UIAlertAction(title: "취소", style: .cancel, handler: nil)

alertController.addAction(loginAction)
alertController.addAction(forgotPasswordAction)
alertController.addAction(cancelAction)

self.present(
alertController,
animated: true,
completion: nil)











func promptForAnswer() {
let ac = UIAlertController(title: "Enter answer", message: nil, preferredStyle: .alert)


ac.addTextField { textField in
let heightConstraint = NSLayoutConstraint(item: textField, attribute: .height, relatedBy: .equal, toItem: nil, attribute: .notAnAttribute, multiplier: 1, constant: 100)

textField.addConstraint(heightConstraint)


}

let submitAction = UIAlertAction(title: "Submit", style: .default) { [unowned ac] _ in
let answer = ac.textFields![0]
print(answer)
}

ac.addAction(submitAction)

present(ac, animated: true)
}











extension CGRect {
init(_ x:CGFloat, _ y:CGFloat, _ w:CGFloat, _ h:CGFloat) {
self.init(x:x, y:y, width:w, height:h)
}

func popUpController()
{

let alertController = UIAlertController(title: "\n\n\n\n\n\n", message: nil, preferredStyle: UIAlertControllerStyle.alert)

let margin:CGFloat = 8.0
let rect = CGRect(margin, margin, alertController.view.bounds.size.width - margin * 15.0, 100.0)
let customView = UITextView(frame: rect)

customView.backgroundColor = UIColor.clear
customView.font = UIFont(name: "Helvetica", size: 15)

alertController.view.addSubview(customView)

let somethingAction = UIAlertAction(title: "수정", style: UIAlertActionStyle.default, handler: {(alert: UIAlertAction!) in print("something")

print(customView.text)

})

let cancelAction = UIAlertAction(title: "취소", style: UIAlertActionStyle.cancel, handler: {(alert: UIAlertAction!) in print("cancel")})

alertController.addAction(somethingAction)
alertController.addAction(cancelAction)

self.present(alertController, animated: true, completion:{})


}



//테이블 뷰 싱글텝 더블텝
https://stackoverflow.com/questions/43153530/single-and-double-taps-on-uitableviewcell-in-swift-3/43299342



https://www.raywenderlich.com/category/ios











//테이블 뷰 셀안에서 이름을 클릭했을때 델리게이트 지정해주는 법
// 1.
protocol PlayVideoCellProtocol {
func playVideoButtonDidSelect()
}

class TableViewCell {
// ...

// 2.
var delegate: PlayVideoCellProtocol!

// 3.
@IBAction func playVideo(sender: AnyObject) {
self.delegate.playVideoButtonDidSelect()
}

// ...
}


class TableViewController: SuperClass, PlayVideoCellProtocol {

// ...

// 4.
func playVideoButtonDidSelect() {
let viewController = ViewController() // Or however you want to create it.
self.presentViewController(viewController, animated: true, completion: nil)
}

func tableView(tableView: UITableView, cellForRowAtIndexPath: NSIndexPath) -> UITableViewCell {
//... Your cell configuration

// 5.
cell.delegate = self

//...
}
//...
}






//완료되면 textfield 커서 사라지고, 키보드 내리기
self.birthTextField.selectedTextRange = nil
self.self.nameTextField.selectedTextRange = nil
self.self.mesageTextField.selectedTextRange = nil

self.birthTextField.resignFirstResponder()
self.self.nameTextField.resignFirstResponder()
self.self.mesageTextField.resignFirstResponder()






//alercontroller안에 피커뷰 넣기


let message = "\n\n\n\n\n\n"
let alert = UIAlertController(title: "Please Select City", message: message, preferredStyle: UIAlertControllerStyle.actionSheet)
alert.isModalInPopover = true

let pickerFrame = UIPickerView(frame: CGRect(x: 5, y: 20, width: SCREEN_WIDTH - 20, height: 140)) // CGRectMake(left, top, width, height) - left and top are like margins
pickerFrame.tag = 555
//set the pickers datasource and delegate
pickerFrame.delegate = self

//Add the picker to the alert controller
alert.view.addSubview(pickerFrame)
let okAction = UIAlertAction(title: "OK", style: .default, handler: {
(alert: UIAlertAction!) -> Void in
//Perform Action
})
alert.addAction(okAction)
let cancelAction = UIAlertAction(title: "Cancel", style: .destructive, handler: nil)
alert.addAction(cancelAction)
self.parent!.present(alert, animated: true, completion: { _ in })
